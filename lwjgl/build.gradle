import edu.sc.seis.launch4j.Launch4jPlugin
import edu.sc.seis.launch4j.tasks.Launch4jLibraryTask

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow'
    id 'edu.sc.seis.launch4j'
}

dependencies {
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation parent
    implementation libs.gamelauncherLwjgl
}

shadowJar {
    archiveBaseName.set('shadow')
    archiveClassifier.set('')
    archiveVersion.set('')
    minimize()
    minimize {
        exclude dependency('org.bouncycastle:.*:.*')
    }
    manifest {
        attributes.put('Main-Class', 'orbits.lwjgl.Start')
    }
}

launch4j {
    jarTask tasks.shadowJar
    outfile = "${project.name}.exe"
    headerType = 'gui'
    mainClassName = 'orbits.lwjgl.Start'
    icon = "${projectDir}/src/main/resources/orbits.ico"
    jreMinVersion = '11'
    jvmOptions = ['-Dgamelauncher.name=GameLauncherTestEXE', '-Dgamelauncher.game_directory=application']
}

static File launch4jOutput(Launch4jLibraryTask task) {
    return task.outputDirectory.file(task.outfile.get()).get().asFile
}

tasks.register('createDebugExe', Launch4jLibraryTask) {
    group = Launch4jPlugin.LAUNCH4J_GROUP
    outfile = "${project.name}-debug.exe"
    headerType = 'console'
    jvmOptions.add '-Dgamelauncher.debug=true'
}

tasks.register('runWindowsDebug', Exec) {
    dependsOn createDebugExe
    group = 'run'
    workingDir = parent.file('run')
    commandLine launch4jOutput(tasks.createDebugExe)
}

tasks.register('runWindows', Exec) {
    dependsOn createExe
    group = 'run'
    workingDir = parent.file('run')
    commandLine launch4jOutput(tasks.createExe)
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
        vendor = JvmVendorSpec.ADOPTIUM
    }
}
